option('modules', type: 'feature', value: 'auto', description: 'Dynamically loadable output module support (default enabled in shared library builds)')
option('programs', type: 'feature', value: 'auto', description: 'Build programs')
option('fifo', type: 'feature', value: 'auto', description: 'FIFO support for control interface (auto-enabled on linux)')
option('id3v2', type: 'feature', value: 'enabled', description: 'ID3v2 parsing')
option('ntom', type: 'feature', value: 'enabled', description: 'flexible resampling')
option('downsample', type: 'feature', value: 'enabled', description: 'downsampled decoding')
option('feeder', type: 'feature', value: 'enabled', description: 'feeder decoding and buffered readers')
option('moreinfo', type: 'feature', value: 'enabled', description: 'extra information for frame analyzers')
option('messages', type: 'feature', value: 'enabled', description: 'output error/warning messages on the console')
option('runtime-tables', type: 'feature', value: 'disabled', description: 'calculate tables at runtime saving size at the expense of additional computation at load time')
option('new-huffman', type: 'feature', value: 'enabled', description: 'new huffman decoding scheme by Taihei (faster on modern CPUs at least, so on by default)')
option('int-quality', type: 'feature', value: 'enabled', description: 'when disabled, use rounding instead of fast truncation for integer output, where possible')
option('equalizer', type: 'feature', value: 'enabled', description: 'equalizer support')
# FIXME: do we need extra options?
option('cpu', type: 'combo', choices: ['generic_dither', 'x86', 'x86-64', 'altivec', 'arm_fpu', 'aarch64'], value: 'generic_dither', description: 'select CPU optimization (see configure.ac for descriptions)')
option('cases', type: 'feature', value: 'enabled', description: 'include special cases for likely parameter values (channel count, encoding sizes in libsyn123 routines) in the hope of better optimization at the expense of some code bloat')
option('buffer', type: 'feature', value: 'auto', description: 'audio buffer code (default enabled by some heuristics)')
option('newoldwritesample', type: 'feature', value: 'auto', description: 'new/old WRITE_SAMPLE macro for non-accurate 16 bit output, faster on certain CPUs (default on on 32 bit x86)')
option('layer1', type: 'feature', value: 'enabled', description: 'layer I decoding')
option('layer2', type: 'feature', value: 'enabled', description: 'layer II decoding')
option('layer3', type: 'feature', value: 'enabled', description: 'layer III decoding')
# FIXME: do we need extra options?
option('audio', type: 'array', choices: ['dummy', 'alsa', 'tinyalsa', 'coreaudio', 'pulse', 'sdl', 'win32', 'win32_wasapi'], value: ['dummy'], description: 'audio output modules')
option('seektable', type: 'integer', min: 0, max: 10000, value: 1000, description: 'size of seek index table (0 disables it)')
option('portable', type: 'feature', value: 'disabled', description: 'only build portable API (no off_t, no internal I/O)')
option('largefile', type: 'feature', value: 'auto', description: 'attempt to use 64 bit file offsets internally')
